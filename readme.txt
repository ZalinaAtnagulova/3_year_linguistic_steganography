This programm embeds a secrect message in a stegotext using similar word substitution method. It's written in Python 3.
A first input is the secret message itself, written in Russian in the lower case. Message can consist of several words but remember, the longer the message is the less safely hidden your message would be. Also, an attempt to cover too long mesage may lead to cover text not being long enough to contain the whole bitsring of your secret message.
A second input is a name of txt file, containing text that would serve as a cover text in Unicode. Cover text will be processed by Mystem module that reads each paragrapg of a text separatly, so try to use as little \n, \r, and \r\n combinations as possible,this way your cover text will be processed faster.
Letters in secret message are generated using Huffman tree method using frequency of use of each Russian letter in text based on data from Russian National Corpora (http://ruscorpora.ru/). Words in cover text are substetuted by those from simillar words list generated for each noun, verb and adverb in the cover text by Thesaurus, Sketch Engine (https://www.sketchengine.co.uk). The score values of words in list are used to build Huffman Tree. A word from a list may be chosen as a substitution if it's code in Huffman Tree is the same as the one of the first letter in a secret message, which is deleted once being substituted.
Source of the Huffman Tree code: http://stackoverflow.com/questions/11587044/how-can-i-create-a-tree-for-huffman-encoding-and-decoding
The Unicode output files are named after input files with addition of '_output' string before '.txt'.